(function () {
   var gulp, awspublish, exec, rename, concat, uglify, stripDebug, del, jshint, replace;

   gulp = require('gulp');

   awspublish = require('gulp-awspublish');

   exec = require('child_process').exec;

   rename = require('gulp-rename');

   concat = require('gulp-concat');

   uglify = require('gulp-uglify');

   stripDebug = require('gulp-strip-debug');

   replace = require('gulp-replace');

   del = require('del');

   jshint = require('gulp-jshint');

   gulp.task('default', ['build-js'], function () {

   });

   gulp.task('build-js', [], function () {
      return gulp.src('./src/**/*.js')
         .pipe(jshint('.jshintrc'))
         .pipe(jshint.reporter('default'))
         .pipe(concat('app.js'))
         .pipe(gulp.dest('./dist/js'))
         .pipe(stripDebug())
         .pipe(uglify())
         .pipe(rename({ suffix: '.min' }))
         .pipe(gulp.dest('./dist/js'));
   });

   gulp.task('publish', function () {
      var publisher = awspublish.create({
         params: {
            Bucket: 'kambi-widgets'
         }
      });

      var headers = {};

      return gulp.src(['./dist/**/*'])
         .pipe(rename(function ( path ) {
            path.dirname = '/lib/dist/' + path.dirname;
         }))
         .pipe(publisher.publish(headers, {
            //force: true
         }))
         .pipe(publisher.cache())
         .pipe(awspublish.reporter());
   });

   gulp.task('publish-src', function () {
      var publisher = awspublish.create({
         params: {
            Bucket: 'kambi-widgets'
         }
      });

      var headers = {};

      return gulp.src(['./src/**/*'])
         .pipe(rename(function ( path ) {
            path.dirname = '/lib/src/' + path.dirname;
         }))
         .pipe(publisher.publish(headers, {
            //force: true
         }))
         .pipe(publisher.cache())
         .pipe(awspublish.reporter());
   });

   gulp.task('publish-docs', function () {
      var publisher = awspublish.create({
         params: {
            Bucket: 'kambi-widgets'
         }
      });

      var headers = {};

      return gulp.src(['docs/**/*'])
         .pipe(rename(function ( path ) {
            path.dirname = '/lib/docs/' + path.dirname;
         }))
         .pipe(publisher.publish(headers, {
            force: true
         }))
         .pipe(publisher.cache())
         .pipe(awspublish.reporter());
   });

   gulp.task('docs', function(cb){
      exec('npm run grunt', function (err, stdout, stderr) {
         console.log(err);
         console.log(stdout);
         console.log(stderr);

         exec('npm run kss', function (err, stdout, stderr) {
            console.log(err);
            console.log(stdout);
            console.log(stderr);
         });
      });
   });

}).call(this);
