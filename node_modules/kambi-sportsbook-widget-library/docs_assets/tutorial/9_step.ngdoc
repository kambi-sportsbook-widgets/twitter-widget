@ngdoc overview
@name Step 9
@description

# Step 9

We might want to show more events, so we'll add a button to do that.
Let's add a footer with a button.

There's no room for our footer at the moment, so let's increase the height a bit

__`appController.js`__

```js
$scope.defaultHeight = 438;
```

We're adding some more classes here
kw-plain: a generic class to create a basic plain look
kw-btn: a general button class to add color and highlight

- ion-plus: a class from the {@link http://ionicons.com ionicons } framework, adds a plus sign

__`index.html`__

```html
<footer class="l-flexbox l-pack-end l-align-center l-mr-15 l-ml-15 l-mb-10">
  <span class="kw-btn kw-plain"><i class="ion-plus"></i></span>
</footer>
```


Make the list limiter a variable

__`appController.js`__
```js
$scope.listLimit = 3;
```

And use it in the event iterator in the html

__`index.html`__

```html
ng-repeat="liveEvent in liveEvents | limitTo : listLimit"
```

Let's also set a variable for the height of each event in the list

__`appController.js`__

```js
$scope.rowHeight = 115;
```

Now it's just a matter of increasing the events shown, calculating the new height and setting it in the widget API.

Create a method for this.

__`appController.js`__

```js
$scope.addRow = function () {
  $scope.listLimit++;
  $scope.currentHeight = $scope.currentHeight + $scope.rowHeight;
  $scope.setWidgetHeight($scope.currentHeight);
};
```

And finally hook up the method to the button in the html.

__`index.html`__

```html
ng-click="addRow()"
```
