@ngdoc overview
@name Step 4
@description

# Step 4

Let's add some styling!

First we need to setup our scss structure to be able to generate the css files

Create a directory called `scss` inside the `src` directory

Create file called `_variables.scss`, this is where we'll specify the colors of our elements

Add the following to it:

File: `_variables.scss`

```scss
//Primary colors
$color-2-2-primary-background: #00c1de;
$color-2-2-primary-background-hover: #E6F9FC;

//Card colors
$color-4-1-card-background: #f6f6f6;
$color-4-1-card-background-hover: #f0f0f0;
$color-4-2-card-supportive-text: #999;
$color-4-2-card-text: #333;
$color-4-1-card-border: #EAEAEA;
```

Create a second file in the scss directory called 'app.scss', this file will import some components from compass
and also the widget core library to help us with basic styling

We will also include the file we just created to provide us with the colors we want

Add the following to it

File: `app.scss`

#### Include compass mixins
```scss
'@import "compass/reset";'
'@import "compass/css3";'

'Include widget core mixins'
'@import "app-base";'

'Include our variables file'
'@import "variables";'
```

Your src directory should now look like this

```
src/
+-- js
|   +-- app.js
|   +-- controllers
|       +-- appController.js
+-- scss                         <-- Our new directory
|   +-- _variables.scss
|   +-- app.scss
+-- index.html
```

Next we'll try and generate the css file, to do this with gulp, just run the `scss` gulp task
If you prefer to use compass yourself, run `compass compile` in the repository root.

You should now have a `src/css/` directory with two files, `app.css` and `app.css.map`
If you don't want to use sourcemapping just ignore the second file.
